<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mj.dao.repository.ComplaintMapper">
  <resultMap id="BaseResultMap" type="com.mj.dao.entity.Complaint">
    <id column="pk_id" jdbcType="INTEGER" property="pkId" />
    <result column="WangWangNum" jdbcType="VARCHAR" property="wangwangnum" />
    <result column="complaintDate" jdbcType="TIMESTAMP" property="complaintdate" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="sceneRestoration" jdbcType="VARCHAR" property="scenerestoration" /><!--该字段弃用-->
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="frequency" jdbcType="INTEGER" property="frequency" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mj.dao.entity.Complaint">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    pk_id, WangWangNum, complaintDate, channel, remark, frequency, is_delete
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_complaint
    where pk_id = #{pkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_complaint
    where pk_id = #{pkId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mj.dao.entity.Complaint">
    insert into t_complaint (pk_id, WangWangNum, complaintDate, 
      channel, sceneRestoration, remark, 
      frequency,
      content
      )
    values (#{pkId,jdbcType=INTEGER}, #{wangwangnum,jdbcType=VARCHAR}, #{complaintdate,jdbcType=TIMESTAMP}, 
      #{channel,jdbcType=INTEGER}, #{scenerestoration,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{frequency,jdbcType=INTEGER},
     #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mj.dao.entity.Complaint">
    insert into t_complaint
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="wangwangnum != null">
        WangWangNum,
      </if>
      <if test="complaintdate != null">
        complaintDate,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="scenerestoration != null">
        sceneRestoration,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="content != null">
        content,
      </if>

      <if test="turnover != null">
        turnover,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="followPersonel != null">
        follow_personel,
      </if>
      <if test="processingScheme != null">
        processing_scheme,
      </if>
      <if test="followProcess != null">
        follow_process,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=INTEGER},
      </if>
      <if test="wangwangnum != null">
        #{wangwangnum,jdbcType=VARCHAR},
      </if>
      <if test="complaintdate != null">
        #{complaintdate,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="scenerestoration != null">
        #{scenerestoration,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>

      <if test="turnover != null">
        #{turnover,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=INTEGER},
      </if>
      <if test="followPersonel != null">
        #{followPersonel,jdbcType=INTEGER},
      </if>
      <if test="processingScheme != null">
        #{processingScheme,jdbcType=LONGVARCHAR},
      </if>
      <if test="followProcess != null">
        #{followProcess,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mj.dao.entity.Complaint">
    update t_complaint
    <set>
      <if test="wangwangnum != null">
        WangWangNum = #{wangwangnum,jdbcType=VARCHAR},
      </if>
      <if test="complaintdate != null">
        complaintDate = #{complaintdate,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="scenerestoration != null">
        sceneRestoration = #{scenerestoration,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mj.dao.entity.Complaint">
    update t_complaint
    set WangWangNum = #{wangwangnum,jdbcType=VARCHAR},
      complaintDate = #{complaintdate,jdbcType=TIMESTAMP},
      channel = #{channel,jdbcType=INTEGER},
      sceneRestoration = #{scenerestoration,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
        is_delete = #{isDelete,jdbcType=TINYINT},
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mj.dao.entity.Complaint">
    update t_complaint
    set WangWangNum = #{wangwangnum,jdbcType=VARCHAR},
      complaintDate = #{complaintdate,jdbcType=TIMESTAMP},
      channel = #{channel,jdbcType=INTEGER},
      sceneRestoration = #{scenerestoration,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <!--自定义-->
  <resultMap id="BaseResultMapVo" type="com.mj.dao.vo.ComplaintVo">
    <id column="pk_id" jdbcType="INTEGER" property="pkId" />
    <result column="WangWangNum" jdbcType="VARCHAR" property="wangwangnum" />
    <result column="complaintDate" jdbcType="TIMESTAMP" property="complaintdate" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="sceneRestoration" jdbcType="VARCHAR" property="scenerestoration" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="frequency" jdbcType="INTEGER" property="frequency" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="turnover" jdbcType="INTEGER" property="turnover" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="industry" jdbcType="INTEGER" property="industry" />
    <result column="follow_personel" jdbcType="INTEGER" property="followPersonel" />
    <result column="processing_scheme" jdbcType="LONGVARCHAR" property="processingScheme" />
    <result column="follow_process" jdbcType="LONGVARCHAR" property="followProcess" />

    <result column="ShoppType" jdbcType="VARCHAR" property="shopptype" />
    <result column="CustType" jdbcType="INTEGER" property="custtype" />
    <result column="TeamID" jdbcType="INTEGER" property="teamid" />
    <result column="is_stop" jdbcType="INTEGER" property="isStop" />
    <result column="TeamName" jdbcType="VARCHAR" property="teamname" />
    <result column="Department" jdbcType="VARCHAR" property="department" />
    <result column="PersonnelID" jdbcType="INTEGER" property="personnelid"/>
    <result column="TScustomer" jdbcType="VARCHAR" property="tscustomer"/>
    <result column="TechnologyRecruitmentID" jdbcType="INTEGER" property="technologyRecruitmentid"/>
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="complaint_name" jdbcType="VARCHAR" property="complaintName" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />

    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="son_level" jdbcType="INTEGER" property="sonLevel" />

    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="ID" jdbcType="INTEGER" property="id" />
    <result column="UserName" jdbcType="VARCHAR" property="tename" />
    <result column="UserName" jdbcType="VARCHAR" property="pname" />
    <result column="result" jdbcType="INTEGER" property="result"/>
  </resultMap>
  <resultMap id="BaseResultMapS" type="com.mj.dao.vo.Complaints">
    <id column="level" jdbcType="INTEGER" property="level" />
    <result column="parent_name" jdbcType="VARCHAR" property="parentName"/>
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="complaint_name" jdbcType="VARCHAR" property="complaintName"/>
  </resultMap>

  <resultMap id="BaseResultMapRVo" type="com.mj.dao.vo.ResponsibilityVo">
    <id column="pk_id" jdbcType="INTEGER" property="pkId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="son_level" jdbcType="INTEGER" property="sonLevel" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="responsibilityer" jdbcType="INTEGER" property="responsibilityer" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="responsibilityor" jdbcType="INTEGER" property="responsibilityor" />
    <result column="complaint_id" jdbcType="INTEGER" property="complaintId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    <result column="basic" jdbcType="LONGVARCHAR" property="basic" />
    <result column="deal" jdbcType="LONGVARCHAR" property="deal" />

    <result column="complaintDate" jdbcType="TIMESTAMP" property="complaintdate" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="WangWangNum" jdbcType="VARCHAR" property="wangwangnum" />

    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="complaint_name" jdbcType="VARCHAR" property="complaintName" />
    <result column="parent_name" jdbcType="VARCHAR" property="parentName"/>

    <result column="TScustomer" jdbcType="VARCHAR" property="tscustomer"/>
    <result column="tename" jdbcType="VARCHAR" property="tename" />
    <result column="TeamName" jdbcType="VARCHAR" property="teamname" />
    <result column="ShoppType" jdbcType="VARCHAR" property="shopptype" />
    <result column="ServerDeadline" jdbcType="VARCHAR" property="serverdeadline" />
    <result column="PersonnelID" jdbcType="INTEGER" property="personnelid"/>
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="pteamname" jdbcType="VARCHAR" property="pteamname" />

    <result column="hidden_content" jdbcType="LONGVARCHAR" property="hiddenContent"/>
    <result column="hidden_date" jdbcType="TIMESTAMP" property="hiddenDate"/>

    <result column="remark" jdbcType="VARCHAR" property="remark"/>
    <result column="frequency" jdbcType="INTEGER" property="frequency"/>

    <result column="refund_date" jdbcType="TIMESTAMP" property="refundDate"/>
    <result column="refund_channel" jdbcType="TINYINT"
            property="refundChannel"/>
    <result column="refund_amount" jdbcType="DECIMAL"
            property="refundAmount"/>
    <result column="refund_cause" jdbcType="VARCHAR"
            property="refundCause"/>
    <result column="external_cause" jdbcType="VARCHAR"
            property="externalCause"/>

    <result column="refund_type" jdbcType="INTEGER"
            property="refundType"/>
    <result column="hidden_type" jdbcType="INTEGER"
            property="hiddenType"/>
    <result column="complaint_type" jdbcType="INTEGER"
            property="complaintType"/>
    <result column="result" jdbcType="INTEGER" property="result"/>
  </resultMap>

  <!--查询分页加搜索不用了-->
  <select id="selectComplaint" parameterType="java.util.HashMap" resultMap="BaseResultMapVo">
    SELECT cu.`TechnologyRecruitmentID`,cu.`TScustomer`,
           cr.`PersonnelID`,cc.*,cu.`ShoppType`
    FROM (t_complaint cc LEFT JOIN t_customer cu ON cc.`WangWangNum` =  cu.`WangWangNum` )
    LEFT JOIN t_customer_records cr ON cu.`WangWangNum` = cr.`Trader`
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      cc.is_delete=0
      <if test="keyword != null and keyword != ''">
        AND ((cc.WangWangNum LIKE CONCAT('%', #{keyword}, '%')
        <!--团队名称搜索-->
        <!--时间搜索-->
        OR cc.`complaintDate` LIKE CONCAT('%',#{keyword}, '%')))
        <!--客诉类别搜索-->
      </if>
      <if test="tscustomer !=-1">
      AND cu.`TScustomer`=#{tscustomer,jdbcType=VARCHAR}
    </if>
      <if test="technologyRecruitmentid !=-1">
        AND cu.`TechnologyRecruitmentID` =#{technologyRecruitmentid,jdbcType=INTEGER}
      </if>
      <if test="personnelid !=-1">
        AND cr.`PersonnelID` = #{personnelid,jdbcType=INTEGER}
      </if>
      <if test="frequency !=-1">
        and cc.`frequency` > #{frequency,jdbcType=INTEGER}
      </if>
      <if test="channel !=-1">
        and cc.`channel` = #{channel,jdbcType=INTEGER}
      </if>
      <if test="teamId !=-1">
        and cu.`TScustomer`= #{teamId,jdbcType=INTEGER}
      </if>
      <!--<if test="startTime != null and endTime !=null ">-->
      <!--and cc.complaintDate <![CDATA[>= ]]> #{startTime} and cc.complaintDate <![CDATA[<= ]]> #{endTime}-->
      <!--</if>-->
      <if test="startTime != '' and endTime !='' ">
        and cc.complaintDate <![CDATA[>= ]]> #{startTime} and cc.complaintDate <![CDATA[<= ]]> #{endTime}
      </if>
    </trim>
    order by cc.`complaintDate` DESC
  </select>
  <!--查询分页加搜索改进版-->
  <select id="selectComplaintList" parameterType="java.util.HashMap" resultMap="BaseResultMapVo">
    SELECT cc.*,rr.result,rr.`level`,rr.`son_level` FROM t_complaint cc left join t_responsibility rr ON rr.`complaint_id` = cc.`pk_id`
    <trim prefix="WHERE" prefixOverrides="AND|OR">
    cc.is_delete=0
    <if test="keyword != null and keyword != ''">
      AND cc.WangWangNum LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <!--按照状态搜索-->
      <!--按照投诉次数管理-->
      <if test="frequency !=-1">
        and cc.`frequency` >= #{frequency,jdbcType=INTEGER}
      </if>
      <if test="result !=-1">
        and rr.result = #{result}
      </if>
      <!--按照投诉渠道搜索-->
      <if test="channel !=-1">
        and cc.`channel` = #{channel,jdbcType=INTEGER}
      </if>
      <if test="startTime != null and endTime !=null ">
        and cc.complaintDate &gt;= #{startTime} and cc.complaintDate &lt; #{endTime}
      </if>
    </trim>
    order by cc.`complaintDate` DESC
  </select>

  <!--根据pkId查询信息-->
  <select id="selectById" parameterType="java.util.HashMap" resultMap="BaseResultMapVo">
      select * FROM t_complaint cc where pk_id=#{pkId,jdbcType=INTEGER}
  </select>

  <!--查询反馈总数-->
  <select id="selectComplaintCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    select count(*)FROM t_complaint cc
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      cc.is_delete=0
      <if test="keyword != null and keyword != ''">
        AND cc.WangWangNum LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <!--按照投诉次数管理-->
      <if test="frequency !=-1">
        and cc.`frequency` >= #{frequency,jdbcType=INTEGER}
      </if>
      <!--按照投诉渠道搜索-->
      <if test="channel !=-1">
        and cc.`channel` = #{channel,jdbcType=INTEGER}
      </if>
      <if test="startTime != null and endTime !=null ">
        and cc.complaintDate &gt;= #{startTime} and cc.complaintDate &lt; #{endTime}
      </if>
    </trim>
  </select>
  <!--查询客户反馈总数量-->
  <select id="sumCustomerComplaint" resultType="java.lang.Integer" parameterType="java.lang.String">
      select count(*) from t_complaint cc where
      cc.`WangWangNum`=#{wangwangnum,jdbcType=VARCHAR} and cc.is_delete=0
  </select>
  <!--删除反馈信息-->
  <!--批量删除-->
  <update id="deleteBatch" parameterType="java.lang.Integer">
    update t_complaint
    set is_delete=1
    where pk_id in
    <foreach collection="array" index="index" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>
  <!--通过wangwangnum查询对应的历史记录-->
  <select id="selectInfoByWangWangNum" resultType="com.mj.dao.vo.ComplaintVo">
    SELECT cu.`TechnologyRecruitmentID`,cu.`TScustomer`,
           cr.`PersonnelID`,cc.*,cu.`ShoppType`
    FROM ((t_complaint cc LEFT JOIN t_customer cu ON cc.`WangWangNum` =  cu.`WangWangNum` )
           LEFT JOIN t_customer_records cr ON cu.`WangWangNum` = cr.`Trader`)where
   cc.WangWangNum = #{wangwangnum,jdbcType=VARCHAR} and  cc.is_delete=0
  </select>
  <!--通过complaintId查询对应的历史记录-->
  <select id="selectFiles" resultType="com.mj.dao.entity.Files">
    SELECT ff.* FROM t_files ff LEFT JOIN t_complaint cc ON ff.`complaint_id` = cc.`pk_id` where ff.`complaint_id` = #{complaintId}
  </select>
  <!--反馈大类-->
  <select id="selectLevel" resultMap="BaseResultMapS">
    SELECT DISTINCT cl.`parent_name`,cl.`parent_id`
    FROM t_complaint_level cl
  </select>
  <!--删除指定文件(弃用)-->
  <update id="deleteFile" parameterType="java.lang.String">
  UPDATE t_complaint cc SET
  cc.`sceneRestoration`= REPLACE (cc.`sceneRestoration`, cc.`sceneRestoration`= #{removeUrls,jdbcType=VARCHAR}, '');
</update>

  <!--通过wangwangnum查询投诉信息-->
  <select id="selelctComplaintByWangWangNum" resultType="com.mj.dao.vo.ResponsibilityVo">
    SELECT * FROM t_complaint cc LEFT JOIN t_responsibility rr
    ON cc.`pk_id` = rr.`complaint_id`
    LEFT JOIN t_complaint_level cl ON rr.`son_level` = cl.`pk_id`
    WHERE cc.`WangWangNum` = #{wangwangnum,jdbcType=VARCHAR}
    and  cc.is_delete=0
  </select>
  <!--通过wangwangnum查询隐患信息-->
  <select id="selectHiddenByWangWangNum" resultType="com.mj.dao.vo.ResponsibilityVo">
    SELECT *  FROM t_hidden_trouble ht LEFT JOIN t_responsibility rr
      ON rr.`complaint_id` = ht.`pk_id`
   LEFT JOIN t_complaint_level cl ON rr.`son_level` = cl.`pk_id`
    WHERE ht.WangWangNum =#{wangwangnum,jdbcType=VARCHAR}
      and  ht.is_delete=0
  </select>
  <!--通过wangwangnum查询退款信息-->
  <select id="selectRefundByWangWangNum" resultType="com.mj.dao.vo.ResponsibilityVo">
    SELECT *  FROM t_refund rf LEFT JOIN t_responsibility rr
    ON rr.`complaint_id` = rf.`pk_id`
    LEFT JOIN t_complaint_level cl ON rr.`son_level` = cl.`pk_id`
    WHERE rf.WangWangNum =#{wangwangnum,jdbcType=VARCHAR}
      and  rf.is_delete=0
  </select>

  <!--修改客诉内容-->
  <update id="updateAll" parameterType="com.mj.dao.vo.ComplaintVo">
    update t_complaint cc left join t_responsibility re on cc.`pk_id` = re.`complaint_id`
    <set>
      <if test="wangwangnum != null">
        cc.WangWangNum = #{wangwangnum,jdbcType=VARCHAR},
      </if>
      <if test="complaintdate != null">
        cc.complaintDate = #{complaintdate,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null">
        cc.channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        cc.remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        cc.frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        cc.is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        cc.content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="level !=null">
        re.level = #{level,jdbcType=INTEGER},
      </if>
      <if test="sonLevel !=null">
        re.son_level = #{sonLevel,jdbcType = INTEGER},
      </if>
      <if test="turnover != null">
        cc.turnover = #{turnover},
      </if>
      <if test="number != null">
        cc.number = #{number},
      </if>
      <if test="industry != null">
        cc.industry = #{industry},
      </if>
      <if test="followPersonel != null">
        cc.follow_personel = #{followPersonel},
      </if>
      <if test="processingScheme != null">
        cc.processing_scheme = #{processingScheme},
      </if>
      <if test="followProcess != null">
        cc.follow_process = #{followProcess}
      </if>
    </set>
    where cc.pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <!--通过pkId查询-->
  <select id="selectBy" parameterType="java.lang.Integer" resultType="com.mj.dao.vo.ComplaintVo">
    select cc.*,re.`result`,re.`level`,re.`son_level` FROM t_complaint cc LEFT JOIN t_responsibility re
                                                                                         ON cc.`pk_id` = re.`complaint_id`
    where cc.pk_id = #{pkId,jdbcType=INTEGER}
  </select>
</mapper>